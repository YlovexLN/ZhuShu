---
import ImageWrapper from "../components/misc/ImageWrapper.astro";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { siteConfig } from "../config";

// Bangumi API配置
const BANGUMI_USER_ID = siteConfig.bangumi?.userId || 'your-user-id'; // 用户ID
const BANGUMI_API_BASE = 'https://api.bgm.tv';

// 获取Bangumi收藏列表
async function fetchBangumiCollection(userId: string, subjectType: number, type: number) {
  try {
    let allData: any[] = [];
    let offset = 0;
    const limit = 50; // 每页获取的数量
    let hasMore = true;

    // 循环获取所有数据
    while (hasMore) {
      const response = await fetch(
        `${BANGUMI_API_BASE}/v0/users/${userId}/collections?subject_type=${subjectType}&type=${type}&limit=${limit}&offset=${offset}`
      );
      if (!response.ok) {
        throw new Error(`Bangumi API error: ${response.status}`);
      }
      
      const data = await response.json();
	  
      // 添加当前页数据到总数据中
      if (data.data && data.data.length > 0) {
        allData = [...allData, ...data.data];
      }
      // 检查是否还有更多数据
      if (!data.data || data.data.length < limit) {
        hasMore = false;
      } else {
        offset += limit;
      }
      // 防止请求过于频繁
      await new Promise(resolve => setTimeout(resolve, 100));
    }
    // 返回合并后的数据
    return { data: allData };
  } catch (error) {
    console.error('Error fetching Bangumi data:', error);
    return null;
  }
}

// 获取在看列表（type=3）
const watchingData = await fetchBangumiCollection(BANGUMI_USER_ID, 2, 3);
// 获取看过列表（type=2）
const completedData = await fetchBangumiCollection(BANGUMI_USER_ID, 2, 2);

// 处理Bangumi数据转换为页面所需格式
function processBangumiData(data: any, status: string) {
  if (!data || !data.data) return [];
  
  return data.data.map((item: any) => {
    // 获取年份信息
    const year = item.subject?.date || 'Unknown';
    
    // 获取评分
    const rating = item.rate ? 
      parseFloat(item.rate.toFixed(1)) : 0;
    
    // 获取进度信息
    const progress = item.ep_status || 0;
    const totalEpisodes = item.subject?.eps || progress;
    
    return {
      title: item.subject?.name_cn || item.subject?.name || 'Unknown Title',
      status: status,
      rating: rating,
      cover: item.subject?.images?.medium || '/assets/anime/default.webp',
      description: item.subject?.name || item.subject?.name_cn || '',
      episodes: `${totalEpisodes} episodes`,
      year: year,
      genre: item.subject?.tags ? item.subject.tags.slice(0, 3).map((tag: any) => tag.name) : ['Unknown'],
      studio: item.subject?.platform || 'Unknown',
      link: item.subject?.url || '#',
      progress: progress,
      totalEpisodes: totalEpisodes,
      startDate: item.subject?.date || '',
      endDate: item.subject?.date || ''
    };
  });
}

// 处理在看和看过列表
const watchingList = watchingData ? processBangumiData(watchingData, "watching") : [];
const completedList = completedData ? processBangumiData(completedData, "completed") : [];

// 合并所有番剧列表
const animeList = [...watchingList, ...completedList];

// 追番数据
const animeList = [
	{
		title: "月色真美",
		status: "completed",
		rating: 9.8,
		cover: "https://i0.hdslb.com/bfs/bangumi/5ce66f68d54052e3a305524b9b06a76977e974fc.jpg",
		description: "茜与小太郎。第一次被分到同班，相识的两人。同班同学、社团伙伴、教师、父母……与周围的关联，自己的成长。在那个一边被变化与不安追着，一边慌慌张张地向前飞奔的季节之中，有着一段稚嫩而又令人眩目的青春校园生活。",
		episodes: "12 episodes",
		year: "2017",
		genre: ["校园", "恋爱", "治愈", "原创"],
		studio: "A-1 Pictures",
		link: "https://www.bilibili.com/bangumi/media/md5989",
		progress: 12,
		totalEpisodes: 12,
		startDate: "2017-04",
		endDate: "2017-06",
	},
		{
		title: "冰菓",
		status: "completed",
		rating: 9.8,
		cover: "https://i0.hdslb.com/bfs/bangumi/074056b8543ed2ceb53dc13a79da1eafa3fa921a.jpg",
		description: "在众多将要展开「玫瑰色」生活的高中生之中，本作的男主角折木奉太郎却是一个「灰色」的节能主义者。凡是没必要的事就不做，因为不想后悔，被人说是疏离、厌世也无所谓，因为这就是他的作风。这样的折木奉太郎，却因为姐姐的命令而进入了濒临废社的「古籍研究社」。研究社虽然好不容易招到了四名新社员，但却又卷入了四十五年前社长突然肄业的谜团之中。社长当年留下的名为「冰菓」的社刊，内里究竟隐藏了什么神秘的讯息呢……",
		episodes: "12 episodes",
		year: "2012",
		genre: ["推理", "恋爱", "日常", "校园"],
		studio: "A-1 Pictures",
		link: "https://www.bilibili.com/bangumi/media/md3398",
		progress: 12,
		totalEpisodes: 12,
		startDate: "2012-04",
		endDate: "2017-09",
	}
];

// 获取状态的翻译文本和样式
function getStatusInfo(status: string) {
	switch (status) {
		case "watching":
			return {
				text: i18n(I18nKey.animeStatusWatching),
				class:
					"bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300",
				icon: "▶",
			};
		case "completed":
			return {
				text: i18n(I18nKey.animeStatusCompleted),
				class:
					"bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300",
				icon: "✓",
			};
		case "planned":
			return {
				text: i18n(I18nKey.animeStatusPlanned),
				class:
					"bg-amber-100 text-amber-700 dark:bg-amber-900/30 dark:text-amber-300",
				icon: "⏰",
			};
		default:
			return {
				text: status,
				class: "bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300",
				icon: "?",
			};
	}
}

// 计算统计数据
const stats = {
	total: animeList.length,
	watching: animeList.filter((anime) => anime.status === "watching").length,
	completed: animeList.filter((anime) => anime.status === "completed").length,
	avgRating: (
		animeList.reduce((sum, anime) => sum + anime.rating, 0) / animeList.length
	).toFixed(1),
};
---

<MainGridLayout title={i18n(I18nKey.anime)} description={i18n(I18nKey.animeSubtitle)}>
	<div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
		<div class="card-base z-10 px-9 py-6 relative w-full">
			<!-- 页面标题 -->
			<div class="relative w-full mb-8">
				<div class="mb-6">
					<h1 class="text-4xl font-bold text-black/90 dark:text-white/90 mb-2">{i18n(I18nKey.animeTitle)}</h1>
					<p class="text-black/75 dark:text-white/75">{i18n(I18nKey.animeSubtitle)}</p>
				</div>
				
				<!-- 统计卡片 -->
				<div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8">
					<div class="bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">📊</div>
							<div>
								<div class="text-2xl font-bold text-blue-600 dark:text-blue-400">{stats.total}</div>
								<div class="text-sm text-blue-600/70 dark:text-blue-400/70">{i18n(I18nKey.animeTotal)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">▶️</div>
							<div>
								<div class="text-2xl font-bold text-green-600 dark:text-green-400">{stats.watching}</div>
								<div class="text-sm text-green-600/70 dark:text-green-400/70">{i18n(I18nKey.animeWatching)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">✅</div>
							<div>
								<div class="text-2xl font-bold text-purple-600 dark:text-purple-400">{stats.completed}</div>
								<div class="text-sm text-purple-600/70 dark:text-purple-400/70">{i18n(I18nKey.animeCompleted)}</div>
							</div>
						</div>
					</div>
					<div class="bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-900/20 dark:to-orange-800/20 rounded-lg p-4">
						<div class="flex items-center gap-3">
							<div class="text-2xl">⭐</div>
							<div>
								<div class="text-2xl font-bold text-orange-600 dark:text-orange-400">{stats.avgRating}</div>
								<div class="text-sm text-orange-600/70 dark:text-orange-400/70">{i18n(I18nKey.animeAvgRating)}</div>
							</div>
						</div>
					</div>
				</div>
			</div>

			<!-- 动漫列表 -->
			<div class="mb-8">
				<h2 class="text-2xl font-bold text-black/90 dark:text-white/90 mb-4">
					{i18n(I18nKey.animeList)}
				</h2>
				
				{BANGUMI_USER_ID === 'your-user-id' ? (
					<div class="text-center py-12">
						<div class="text-5xl mb-4">😢</div>
						<h3 class="text-xl font-medium text-black/80 dark:text-white/80 mb-2">
							请配置 Bangumi 用户ID
						</h3>
						<p class="text-black/60 dark:text-white/60">
							请在 src/config.ts 文件中设置你的 Bangumi 用户ID
						</p>
					</div>
				) : animeList.length > 0 ? (
					<div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 md:gap-6">
						{animeList.map(anime => {
							const statusInfo = getStatusInfo(anime.status);
							const progressPercent = anime.totalEpisodes > 0 ? (anime.progress / anime.totalEpisodes) * 100 : 0;
							
							return (
								<div class="group relative bg-[var(--card-bg)] border border-[var(--line-divider)] rounded-[var(--radius-large)] overflow-hidden transition-all duration-300 hover:shadow-lg hover:scale-[1.02]">
									<!-- 封面区域 - 竖屏比例 -->
									<div class="relative aspect-[2/3] overflow-hidden">
										<a href={anime.link} target="_blank" rel="noopener noreferrer" class="block w-full h-full">
											<ImageWrapper 
												src={anime.cover} 
												alt={anime.title}
												class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-110"
											/>
											<div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
												<div class="absolute inset-0 flex items-center justify-center">
													<div class="w-12 h-12 rounded-full bg-white/90 flex items-center justify-center">
														<svg class="w-6 h-6 text-gray-800 ml-1" fill="currentColor" viewBox="0 0 24 24">
															<path d="M8 5v14l11-7z"/>
														</svg>
													</div>
												</div>
											</div>
										</a>
										
										<!-- 状态标签 -->
										<div class={`absolute top-2 left-2 px-2 py-1 rounded-md text-xs font-medium ${statusInfo.class}`}>
											<span class="mr-1">{statusInfo.icon}</span>
											<span>{statusInfo.text}</span>
										</div>
										
										<!-- 评分 -->
										<div class="absolute top-2 right-2 bg-black/70 text-white px-2 py-1 rounded-md text-xs font-medium flex items-center gap-1">
											<svg class="w-3 h-3 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
												<path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"/>
											</svg>
											<span>{anime.rating}</span>
										</div>
										
										<!-- 进度条 - 在封面底部 -->
										{anime.status === 'watching' && (
											<div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-2">
												<div class="w-full bg-white/20 rounded-full h-1.5 mb-1">
													<div class="bg-gradient-to-r from-emerald-400 to-teal-400 h-1.5 rounded-full transition-all duration-300" style={`width: ${progressPercent}%`}></div>
												</div>
												<div class="text-white text-xs font-medium">
													{anime.progress}/{anime.totalEpisodes} ({Math.round(progressPercent)}%)
												</div>
											</div>
										)}
									</div>
									
									<!-- 内容区域 - 紧凑设计 -->
									<div class="p-3">
										<h3 class="text-sm font-bold text-black/90 dark:text-white/90 mb-1 line-clamp-2 leading-tight">{anime.title}</h3>
										<p class="text-black/60 dark:text-white/60 text-xs mb-2 line-clamp-2">{anime.description}</p>
										
										<!-- 详细信息 - 更紧凑 -->
										<div class="space-y-1 text-xs">
											<div class="flex justify-between">
													<span class="text-black/50 dark:text-white/50">{i18n(I18nKey.animeYear)}</span>
												<span class="text-black/70 dark:text-white/70">{anime.year}</span>
											</div>
											<div class="flex justify-between">
													<span class="text-black/50 dark:text-white/50">{i18n(I18nKey.animeStudio)}</span>
												<span class="text-black/70 dark:text-white/70 truncate ml-2">{anime.studio}</span>
											</div>
											<div class="flex flex-wrap gap-1 mt-2">
												{anime.genre.map(g => (
													<span class="px-1.5 py-0.5 bg-[var(--btn-regular-bg)] text-black/70 dark:text-white/70 rounded text-xs">{g}</span>
												))}
											</div>
										</div>
									</div>
								</div>
							);
						})}
					</div>
				) : (
					<div class="text-center py-12">
						<div class="text-5xl mb-4">😢</div>
						<h3 class="text-xl font-medium text-black/80 dark:text-white/80 mb-2">
							{i18n(I18nKey.albumsEmpty)}
						</h3>
						<p class="text-black/60 dark:text-white/60">
							暂无追番数据，请检查 Bangumi 配置或网络连接
						</p>
					</div>
				)}
			</div>
		</div>
	</div>
</MainGridLayout>